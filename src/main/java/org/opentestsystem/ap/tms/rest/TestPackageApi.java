package org.opentestsystem.ap.tms.rest;

import org.opentestsystem.ap.common.exception.ResourceNotFoundException;
import org.opentestsystem.ap.tms.model.TestPackage;
import org.opentestsystem.ap.tms.model.TestPackageCommit;
import org.opentestsystem.ap.tms.model.TestPackageResponse;
import org.opentestsystem.ap.tms.service.TestPackageService;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/v1/tests")
public class TestPackageApi {
    private final TestPackageService testPackageService;

    public TestPackageApi(final TestPackageService testPackageService) {
        this.testPackageService = testPackageService;
    }

    @PostMapping
    public TestPackageResponse createTestPackage(@RequestBody final TestPackage testPackage) {
        return testPackageService.create(testPackage);
    }

    @PutMapping("/{packageId}")
    public TestPackageResponse saveTestPackage(@PathVariable final String packageId,
                                               @RequestBody final TestPackage testPackage) {
        return testPackageService.save(packageId, testPackage);
    }

    @PostMapping("/{packageId}/commit")
    public TestPackageResponse commit(@PathVariable final String packageId,
                                      @RequestBody final TestPackageCommit testPackageCommit) {
        return testPackageService.commit(packageId, testPackageCommit);
    }

    @PostMapping("/{packageId}/lock")
    public TestPackageResponse lock(@PathVariable final String packageId) {
        return testPackageService.lock(packageId);
    }

    @GetMapping("/{packageId}")
    public TestPackageResponse findByTestPackageId(@PathVariable final String packageId) {
        return testPackageService.find(packageId).orElseThrow(
            () -> new ResourceNotFoundException("Could not find test package for " + packageId));
    }

    @PostMapping("/{packageId}/discard")
    public void discard(@PathVariable final String packageId) {
        testPackageService.discard(packageId);
    }
}
