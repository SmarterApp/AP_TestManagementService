package org.opentestsystem.ap.tms.configuration;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.config.ContentNegotiationConfig;
import org.opentestsystem.ap.common.config.DatabaseConfiguration;
import org.opentestsystem.ap.common.config.FreemarkerConfig;
import org.opentestsystem.ap.common.config.ItemBankProperties;
import org.opentestsystem.ap.common.config.JwtWebSecurityConfiguration;
import org.opentestsystem.ap.common.config.ObjectMapperConfiguration;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.DataStoreItemManager;
import org.opentestsystem.ap.common.datastore.DataStoreUtility;
import org.opentestsystem.ap.common.datastore.attachment.mapper.ItemAttachmentMapper;
import org.opentestsystem.ap.common.management.ItemManager;
import org.opentestsystem.ap.common.management.ItemManagerEventProducer;
import org.opentestsystem.rdw.common.status.StatusConfiguration;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;

@Slf4j
@Configuration
@Import({
    ContentNegotiationConfig.class,
    DatabaseConfiguration.class,
    FreemarkerConfig.class,
    JwtWebSecurityConfiguration.class,
    ObjectMapperConfiguration.class,
    StatusConfiguration.class
})
public class TestManagementConfiguration {
    private final ItemBankProperties itemBankProperties;

    private final RabbitTemplate rabbitTemplate;

    private final DataStoreDataManager dataStoreDataManager;

    private final DataStoreAttachmentManager dataStoreAttachmentManager;

    private final DataStoreUtility dataStoreUtility;

    private final ItemAttachmentMapper itemAttachmentMapper;

    public TestManagementConfiguration(ItemBankProperties itemBankProperties,
                                       RabbitTemplate rabbitTemplate,
                                       DataStoreDataManager dataStoreDataManager,
                                       DataStoreAttachmentManager dataStoreAttachmentManager,
                                       DataStoreUtility dataStoreUtility,
                                       final ItemAttachmentMapper itemAttachmentMapper) {
        this.itemBankProperties = itemBankProperties;
        this.rabbitTemplate = rabbitTemplate;
        this.dataStoreDataManager = dataStoreDataManager;
        this.dataStoreAttachmentManager = dataStoreAttachmentManager;
        this.dataStoreUtility = dataStoreUtility;
        this.itemAttachmentMapper = itemAttachmentMapper;
    }

    @Bean
    @ConditionalOnMissingBean
    public ItemManagerEventProducer itemManagementEventProducer(RabbitTemplate rabbitTemplate) {
        return new ItemManagerEventProducer(this.itemBankProperties, rabbitTemplate);
    }


    // ------------------------------------------------------------------------

    @Bean
    @ConditionalOnMissingBean
    public ItemManagerEventProducer itemManagementEventProducer() {
        log.info("Creating bean itemManagementEventProducer");
        return new ItemManagerEventProducer(this.itemBankProperties, this.rabbitTemplate);
    }

    @Bean
    @ConditionalOnMissingBean
    public DataStoreItemManager dataStoreItemManager() {
        log.info("Creating bean dataStoreItemManager");
        return new DataStoreItemManager(
            this.itemBankProperties,
            this.dataStoreDataManager,
            this.dataStoreAttachmentManager,
            itemManagementEventProducer(),
            this.dataStoreUtility,
            this.itemAttachmentMapper);
    }


    @Bean
    @ConditionalOnMissingBean
    public ItemManager itemManager() {
        log.info("Creating bean itemManager");
        return new ItemManager(
            dataStoreItemManager(),
            null,
            null,
            null);
    }
}
