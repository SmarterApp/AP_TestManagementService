package org.opentestsystem.ap.tms.service;

import org.opentestsystem.ap.common.security.SecurityUtil;
import org.opentestsystem.ap.tms.model.TestPackage;
import org.opentestsystem.ap.tms.model.TestPackageCommit;
import org.opentestsystem.ap.tms.model.TestPackageEntity;
import org.opentestsystem.ap.tms.model.TestPackageResponse;
import org.opentestsystem.ap.tms.model.TestPackageSummary;
import org.opentestsystem.ap.tms.repository.TestPackageRepository;
import org.springframework.stereotype.Service;

import java.util.Collection;
import java.util.Optional;
import java.util.UUID;

@Service
public class DefaultTestPackageService implements TestPackageService {
    private final TestPackageRepository testPackageRepository;

    public DefaultTestPackageService(final TestPackageRepository testPackageRepository) {
        this.testPackageRepository = testPackageRepository;
    }

    @Override
    public TestPackageResponse save(final TestPackage testPackage) {
        SecurityUtil.getItemBankUser();

        TestPackageEntity entity = TestPackageEntity.builder()
            .packageId("id-" + UUID.randomUUID())
            .beingCreated(true)
            .locked(true)
            .testPackage(testPackage)
            .insertedBy("test")
            .build();

        TestPackageEntity persistedEntity = testPackageRepository.save(entity);

        TestPackageResponse response = new TestPackageResponse();
        response.setBeingCreated(persistedEntity.isBeingCreated());
        response.setLocked(entity.isLocked());
        response.setLockedBy(entity.isLocked() ? entity.getInsertedBy() : "");
        response.setTestPackage(entity.getTestPackage());

        return response;
    }

    @Override
    public Optional<TestPackageResponse> find(final String testPackageId) {
        return Optional.empty();
    }

    @Override
    public TestPackageResponse commit(final TestPackageCommit testPackageCommit) {
        return null;
    }

    @Override
    public Collection<TestPackageSummary> get() {
        return null;
    }
}
