package org.opentestsystem.ap.tms.service;

import org.junit.Test;
import org.opentestsystem.ap.tms.builder.TestPackageBuilder;
import org.opentestsystem.ap.tms.model.TestPackage;
import org.opentestsystem.ap.tms.model.TestPackageConstants;

import java.util.Arrays;
import java.util.Collections;

import static org.assertj.core.api.Assertions.assertThat;

public class PackageMetadataGeneratorTest {
    @Test
    public void shouldCreateInterimPackageId() {
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Interim)
            .subject("ELA")
            .subType("IAB")
            .year("2019")
            .build();

        assertThat(PackageMetadataGenerator.generatePackageId(testPackage)).isEqualTo("SBAC-IAB-ELA-OA-3-2019");
    }

    @Test
    public void shouldCreateSummativePackageId() {
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Summative)
            .subject("ELA")
            .subType("IAB")
            .year("2019")
            .build();

        assertThat(PackageMetadataGenerator.generatePackageId(testPackage)).isEqualTo("SBAC-OP-ELA-OA-3-2019");
    }

    @Test
    public void shouldCreatePracticePackageId() {
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Practice)
            .subject("ELA")
            .subType("IAB")
            .year("2019")
            .suffix("noCalc")
            .build();

        assertThat(PackageMetadataGenerator.generatePackageId(testPackage)).isEqualTo("SBAC-OA-ELA-3-2019-noCalc");
    }

    @Test
    public void shouldCreateOtherPackageId() {
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Other)
            .subject("ELA")
            .subType("IAB")
            .year("2019")
            .build();

        assertThat(PackageMetadataGenerator.generatePackageId(testPackage)).isEqualTo("SBAC-OA-ELA-3-2019");
    }

    @Test
    public void shouldCreatePackageLabelWithSubtype() {
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Interim)
            .subject("ELA")
            .subType("IAB")
            .year("2019")
            .suffix("noCalc")
            .build();

        assertThat(PackageMetadataGenerator.generatePackageLabel(testPackage)).isEqualTo("Grade 3 ELA - OA IAB - 2019");
    }

    @Test
    public void shouldCreatePackageLabelWithoutSubtype() {
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Practice)
            .subject("ELA")
            .year("2019")
            .suffix("noCalc")
            .build();

        assertThat(PackageMetadataGenerator.generatePackageLabel(testPackage)).isEqualTo("Grade 3 ELA - OA - 2019");
    }

    @Test
    public void shouldCreateTestIdForPackageWithSingleTest() {
        org.opentestsystem.ap.tms.model.Test test = new org.opentestsystem.ap.tms.model.Test();
        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Practice)
            .subject("ELA")
            .year("2019")
            .suffix("noCalc")
            .tests(Collections.singletonList(test))
            .build();

        PackageMetadataGenerator.updatePackageWithGeneratedData(testPackage);

        assertThat(test.getId()).isEqualTo(testPackage.getId());
    }

    @Test
    public void shouldCreateTestIdForPackageWithMultipleTests() {
        org.opentestsystem.ap.tms.model.Test test = new org.opentestsystem.ap.tms.model.Test();
        org.opentestsystem.ap.tms.model.Test test2 = new org.opentestsystem.ap.tms.model.Test();

        TestPackage testPackage = TestPackageBuilder.builder()
            .grade("3")
            .title("OA")
            .type(TestPackageConstants.PackageType.Practice)
            .subject("ELA")
            .year("2019")
            .suffix("noCalc")
            .tests(Arrays.asList(test, test2))
            .build();

        PackageMetadataGenerator.updatePackageWithGeneratedData(testPackage);

        assertThat(test.getId()).isEqualTo(testPackage.getId() + "-1");
        assertThat(test2.getId()).isEqualTo(testPackage.getId() + "-2");
    }
}